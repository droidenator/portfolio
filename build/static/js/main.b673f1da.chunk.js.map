{"version":3,"sources":["scenes/Projects/styles.module.css","services/domUtils.js","components/Header/index.js","scenes/Home/index.js","scenes/About/index.js","data/projects.js","scenes/Projects/components/Videos/index.js","scenes/Projects/index.js","App.js","serviceWorker.js","index.js","scenes/Projects/components/Videos/styles.module.css"],"names":["module","exports","changePageTitle","title","window","document","changeTheme","a","Promise","resolve","reject","http","XMLHttpRequest","onreadystatechange","readyState","status","palette","JSON","parse","responseText","result","open","send","stringify","model","_changeBackground","reverse","newColors","forEach","cssVar","i","documentElement","style","setProperty","toString","Header","isHome","useRouteMatch","path","exact","className","to","onClick","Home","About","projects","name","description","video","url","image","technologies","urls","text","Videos","videos","displayVideoSelector","length","useState","activeVideo","setActiveVideo","styles","container","fixedAspectContainer","player","width","height","selector","map","key","src","alt","selected","Projects","project","content","links","link","href","App","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b673f1da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"project\":\"styles_project__eWirO\",\"title\":\"styles_title__3eX6h\",\"description\":\"styles_description__Tgjln\",\"content\":\"styles_content__KFvv0\",\"links\":\"styles_links__ObIU0\"};","export function changePageTitle(title) {\n  window.document.title = title;\n}\n\nexport async function changeTheme() {\n  const newPalette = await _fetchColorPalette();\n  _changeBackground(newPalette.reverse());\n}\n\nfunction _fetchColorPalette() {\n  return new Promise((resolve, reject) => {\n    const url = 'http://colormind.io/api/';\n    const data = {\n      model: 'ui',\n    };\n\n    var http = new XMLHttpRequest();\n\n    http.onreadystatechange = function() {\n      if (http.readyState === 4 && http.status === 200) {\n        var palette = JSON.parse(http.responseText).result;\n        resolve(palette);\n      }\n    };\n\n    http.open('POST', url, true);\n    http.send(JSON.stringify(data));\n  });\n}\n\nfunction _changeBackground(newColors) {\n  const cssVars = [\n    '--color-primary',\n    '--color-secondary',\n    '--color-background',\n    '--color-accent',\n  ];\n\n  cssVars.forEach((cssVar, i) => {\n    window.document.documentElement.style.setProperty(\n      cssVar,\n      `rgb(${newColors[i].toString()})`\n    );\n  });\n}\n","import React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { changeTheme } from '../../services/domUtils';\n\nfunction Header() {\n  const isHome = useRouteMatch({ path: '/', exact: true });\n\n  return (\n    <header className={`App-header ${isHome ? 'App-header__home' : ''}`}>\n      <div className=\"App-header-title\">Sean Corrales</div>\n      <div className=\"App-links\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/projects\">Projects</Link>\n        <Link to=\"/about\">About</Link>\n        <button onClick={changeTheme}>Random Theme</button>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { changePageTitle } from '../../services/domUtils';\n\nexport default function Home() {\n  changePageTitle('Home - Sean Corrales');\n  return (\n    <div>\n      <h1>Hi! My name is Sean Corrales.</h1>\n      <h4>\n        I'm a software developer building stuff with JavaScript, node.js, HTML,\n        and CSS.\n      </h4>\n    </div>\n  );\n}\n","import React from 'react';\nimport { changePageTitle } from '../../services/domUtils';\n\nexport default function About() {\n  changePageTitle('About - Sean Corrales');\n  return (\n    <div className=\"page-container\">\n      <h2>About</h2>\n      <p>\n        I've been a web developer for almost 20 years. I started out in 2001\n        building sites using plain HTML. I quickly learned PHP and MySQL and\n        started building dynamic web sites that could be managed by\n        non-technical users. Since 2015, my primary focus has been Javascript\n        and node.js with plenty of HTML and CSS as needed. Lately, I've been\n        working with React, Koa, and MongoDB.\n      </p>\n      <p>\n        Over the span of my career, I've worked with several talented designers\n        who helped me develop strong CSS skills and an excellent eye for detail\n        in design. I've developed custom e-commerce solutions, built and managed\n        Linux servers, created custom modules for various CMSs, built custom\n        montioring applications, mentored junior developers, and a ton of other\n        stuff.\n      </p>\n      <p>\n        I like fixing bugs and writing tests. I love building applications with\n        great UX. My favorite things to build are things that will have a\n        positive impact on my users.\n      </p>\n    </div>\n  );\n}\n","export const projects = [\n  {\n    name: 'Explore LEVEL',\n    description: `LEVEL wanted an immersive way for potential tenants to explore their apartments. After much brainstorming, it was decided to build an interactive exploded-view floorplan.\n\n    Users can click through each floor and view the details for specific apartments. Entering the data for the apartments was done with a custom Drupal component that allowed an admin to use a GUI interface to trace each apartment and enter the details.\n\n    The LEVEL website was built using Drupal 7. The admin tool for adding apartments is a custom Drupal module written in PHP and JavaScript. The floor plan explorer is built using jQuery, Raphael, and custom JavaScript.\n\n    This website won the 2012 \"Best of Interactive\" Addy award in Oklahoma.`,\n    video: [{ url: 'https://vimeo.com/369484760', image: 'images/level.png' }],\n    technologies: 'JavaScript, HTML, CSS, PHP',\n    urls: [{ url: 'https://levelokc.com/the-space/level', text: 'LEVEL' }],\n  },\n  {\n    name: 'Sundance Airport Automated Weather Observation Service (AWOS)',\n    description: `Sundance Airport needed a new application to display AWOS information and replace the legacy flash version provided by the AWOS vendor.\n\n    Two versions were designed and built. The first version prioritized speed and ease of use for mobile and desktop users. The mobile version is built to be easy to use for pilots checking the current conditions from their phones.\n\n    The other version was developed for the large display behind the front desk of Sundance Airport. It includes real-time weather effects and up-to-date weather for frequent destinations.\n\n    The AWOS application is built in React. The animations are a result of my work with our UX designer who designed the application. I also built a Node.js server for fetching the AWOS and weather data. SSE is used to stream data from the server to the client in realtime.`,\n    video: [\n      { url: 'https://vimeo.com/369484922', image: 'images/sundance-tv.png' },\n      {\n        url: 'https://vimeo.com/369484940',\n        image: 'images/sundance-desktop.png',\n      },\n    ],\n    technologies: 'Javascript, HTML, CSS, React, Server Sent Events, node.js',\n    urls: [\n      { url: 'http://awos.sundanceairport.com/tv', text: 'TV Version' },\n      {\n        url: 'http://awos.sundanceairport.com',\n        text: 'Desktop/Mobile version',\n      },\n    ],\n  },\n  {\n    name: 'Music Trail Itinerary and Homepage Map',\n    description: `The Oklahoma Tourism department wanted to create an interactive way for visitors to learn more about Oklahoma's musical history.\n\n    The music trail homepage map is generated using HTML and JavaScript. Site administrators are able to place points on the map and add content for each popup.\n\n    The music trail itineraries section provides visitors with itineraries for various musical artists. Site administrators are able to create new itineraries and add and order various starts. The public itineraries pages features tight integration with Google Maps. Each location can easily be displayed via Google maps and driving directions are generated for the entire itinerary and also between each stop on the itinerary.`,\n    video: [\n      {\n        url: 'https://vimeo.com/369484865',\n        image: 'images/music-trail-map.png',\n      },\n      {\n        url: 'https://vimeo.com/369484803',\n        image: 'images/music-trail-itenary.png',\n      },\n    ],\n    technologies: 'JavaScript, HTML, CSS, PHP',\n    urls: [\n      {\n        url: 'https://www.travelok.com/music-trail/',\n        text: 'Music Trail Homepage',\n      },\n      {\n        url: 'https://www.travelok.com/music-trail/itineraries',\n        text: 'Music Trail Itineraries',\n      },\n    ],\n  },\n  {\n    name: 'nJoy Vision Scheduling App',\n    description: `nJoy Vision needed to allow patients to schedule appointments online using their appointment scheduling software.\n\n    I wrote a server to interface with the scheduling API. The front end is built using Angular and embedded in a Wordpress site.`,\n    video: [{ url: 'https://vimeo.com/369484879', image: 'images/njoy.png' }],\n    technologies: 'JavaScript, HTML, CSS, PHP, Angular',\n    urls: [\n      {\n        url: 'https://njoyvision.com/schedule/',\n        text: 'nJoy Appointment Scheduling',\n      },\n    ],\n  },\n  {\n    name: 'PDC Productions Custom Slider',\n    description: `I built a custom slider that animated the slider image, headline, and body text separately to help it standout from all the other sliders on the market.\n\n    The website also featured a unique expanding footer.`,\n    video: [{ url: 'https://vimeo.com/369484889', image: 'images/pdc.png' }],\n    technologies: 'JavaScript, HTML, CSS',\n    urls: [],\n  },\n  {\n    name: 'Ruby Red 40 Parallax Effect',\n    description: `The Ruby Red 40 was a simple one page application with some information about the event. I animated the clouds and flowers on the landing page using a custom parallax effect.`,\n    video: [\n      { url: 'https://vimeo.com/369484903', image: 'images/ruby-red.png' },\n    ],\n    technologies: 'JavaScript, HTML, CSS',\n    urls: [],\n  },\n];\n","import React, { useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport styles from './styles.module.css';\n\nexport default function Videos({ videos }) {\n  const displayVideoSelector = videos.length > 1;\n  const [activeVideo, setActiveVideo] = useState(videos[0].url);\n  return (\n    <div className={styles.container}>\n      <div className={styles.fixedAspectContainer}>\n        <ReactPlayer\n          className={styles.player}\n          url={activeVideo}\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n      {displayVideoSelector && (\n        <div className={styles.selector}>\n          {videos.map((video, i) => (\n            <img\n              key={i}\n              src={video.image}\n              onClick={() => setActiveVideo(video.url)}\n              alt=\"Video thumbnail\"\n              className={`${styles.image} ${\n                activeVideo === video.url ? styles.selected : ''\n              }`}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { projects } from '../../data/projects';\nimport { changePageTitle } from '../../services/domUtils';\nimport Videos from './components/Videos';\nimport styles from './styles.module.css';\n\nexport default function Projects() {\n  changePageTitle('Projects - Sean Corrales');\n  return (\n    <div className=\"page-container\">\n      <h2>Projects</h2>\n      {projects.map(project => (\n        <div key={project.name} className={styles.project}>\n          <Videos videos={project.video} />\n          <div className={styles.content}>\n            <h3 className={styles.title}>{project.name}</h3>\n            <div className={styles.description}>{project.description}</div>\n            <div className={styles.links}>\n              {project.urls.map((link, i) => (\n                <span key={i}>\n                  <a href={link.url}>{link.text}</a>\n                  {i + 1 < project.urls.length && ' | '}\n                </span>\n              ))}\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header';\nimport Home from './scenes/Home';\nimport About from './scenes/About';\nimport Projects from './scenes/Projects';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/projects\" component={Projects} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2NkvX\",\"selector\":\"styles_selector__32PR5\",\"image\":\"styles_image__1DUZn\",\"selected\":\"styles_selected__1zkL9\",\"fixedAspectContainer\":\"styles_fixedAspectContainer__2UO3d\",\"player\":\"styles_player__3T8J2\"};"],"sourceRoot":""}